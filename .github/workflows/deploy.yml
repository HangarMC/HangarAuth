name: Deploy

on:
  # allow manual dispatch
  workflow_dispatch:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}-deploy
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Set up pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: 7

      - name: Cache Maven Deps
        uses: actions/cache@v2
        with:
          path: $GITHUB_WORKSPACE/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache pnpm
        uses: actions/cache@v2
        with:
          path: "~/.pnpm-store"
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Build backend
        working-directory: backend
        run: mvn --batch-mode --errors --fail-at-end --show-version --no-transfer-progress -Dmaven.repo.local=$GITHUB_WORKSPACE/.m2/repository install

      - name: Install frontend deps
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      # todo lint
      # - name: Lint frontend
      #   working-directory: frontend
      #   run: pnpm lint

      - name: Build frontend
        working-directory: frontend
        env:
          # keep these in sync with compose!
          PUBLIC_HOST: "https://hangar-auth.benndorf.dev"
          BACKEND_HOST: "http://hangar_auth_backend:8080"
          KRATOS_PUBLIC: "https://hangar-auth.benndorf.dev/kratos"
          KRATOS: "http://kratos:4433"
          HANGAR_HOST: "https://hangar.benndorf.dev"
          DEBUG: "hangar:*"
        run: pnpm build

      - name: SSH
        uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.DOCKER_HOST_SSH_KEY }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}

      - name: Docker
        working-directory: docker/deployment
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          EMAIL_SETTINGS: ${{ secrets.EMAIL_SETTINGS }}
          SSO_API_KEY: ${{ secrets.SSO_API_KEY }}
        run: |
          echo ${{ secrets.DOCKER_HOST_SSH_SIG }} > ~/.ssh/known_hosts
          docker-compose build
          docker-compose push
          DOCKER_HOST="${{ secrets.DOCKER_HOST }}" docker stack deploy --with-registry-auth --compose-file=docker-compose.yml hangar_auth
