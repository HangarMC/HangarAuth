name: Deploy

on:
  # allow manual dispatch
  workflow_dispatch:
  push:
    branches:
      - master
      - staging

concurrency:
  group: ${{ github.ref }}-deploy
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get timestamp
        id: timestamp
        run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Cache Maven Deps
        uses: actions/cache@v3
        with:
          path: $GITHUB_WORKSPACE/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: "/home/runner/.local/share/pnpm/store/v3"
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Build backend
        working-directory: backend
        run: mvn --batch-mode --errors --fail-at-end --show-version --no-transfer-progress -Dmaven.repo.local=$GITHUB_WORKSPACE/.m2/repository install

      - name: Install frontend deps
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Lint frontend
        working-directory: frontend
        run: pnpm prep && pnpm lint:eslint

      - name: Build frontend
        working-directory: frontend
        run: pnpm build

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker (frontend)
        id: frontend-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/frontend
          tags: |
            type=sha,enable=true,format=short,prefix=${{ env.BRANCH_NAME }}-,suffix=-${{ steps.timestamp.outputs.timestamp }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push frontend Dockerfile
        uses: docker/build-push-action@v3
        with:
          context: .
          file: chart/dockerfiles/frontend/Dockerfile
          tags: ${{ steps.frontend-meta.outputs.tags }}
          labels: ${{ steps.frontend-meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata (tags, labels) for Docker (backend)
        id: backend-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/backend
          tags: |
            type=sha,enable=true,format=short,prefix=${{ env.BRANCH_NAME }}-,suffix=-${{ steps.timestamp.outputs.timestamp }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push backend Dockerfile
        uses: docker/build-push-action@v3
        with:
          context: .
          file: chart/dockerfiles/backend/Dockerfile
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
