# Default values for hangarauth.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
base:
  hangarHost: "https://hangar.test"
  authHost: "https://auth.hangar.test"
  sso:
    apiKey: "some-id"

frontend:
  replicaCount: 1

  image:
    repository: ghcr.io/hangarmc/hangarauth/frontend
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts: []
#       - host: auth.hangar.test
#         paths:
#           - path: /
#             pathType: ImplementationSpecific
    tls: []
    #  - secretName: hangar-auth-tls
    #    hosts:
    #      - auth.hangar.test

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: []

  config:
    kratos:
      adminUrl: "http://hangarauth-kratos:4434"
      backendUrl: "http://hangarauth-kratos:4433"
    backendHost: "http://hangarauth-backend:8080"
    debug: "hangar:*"
    signupDisabled: "false"

backend:
  replicaCount: 1

  image:
    repository: ghcr.io/hangarmc/hangarauth/backend
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  service:
    type: ClusterIP
    port: 8080

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: []

  config:
    postgresql:
      hostname: "hangarauth-postgresql"
      port: 5432
      username: "hangarauth"
      password: "hangarauth" # TODO: secret
      database: "hangarauth"
      options: "?currentSchema=auth"
    auth:
      allowedOrigins:
        - "https://auth.hangar.test"
        - "https://hangar.test"
      kratos:
        adminUrl: "http://hangarauth-kratos:4434"
        publicBackendUrl: "http://hangarauth-kratos:4433"
      hydra:
        adminUrl: "http://hangarauth-hydra:4445"
    storage:
      type: "local"
      accessKey: ""
      secretKey: ""
      bucket: ""
      objectStorageEndpoint: ""
      cdnEndpoint: ""
      cdnIncludeBucket: true
    invite:
      enabled: true
      apiKey: "hookapikey-changeme"

postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        postgresPassword: "hangarauth"
        username: "hangarauth"
        password: "hangarauth"
        database: "hangarauth"

hydra:
  replicaCount: 1

  image:
    repository: oryd/hydra
    pullPolicy: Always
    tag: "v1.11.10"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 100
    runAsNonRoot: true
    runAsUser: 100

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  service:
    type: ClusterIP
    port: 4444

  ingress:
    enabled: false
    className: ""
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    hosts: []
     #- host: "auth.hangar.test"
     #  paths:
     #    - path: "/hydra(/|$)(.*)"
     #      pathType: ImplementationSpecific

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: []

  config:
    postgresql:
      hostname: "hangarauth-postgresql"
      port: 5432
      username: "hangarauth"
      password: "hangarauth"
      database: "hangarauth"
      options: "?sslmode=disable&max_conns=20&max_idle_conns=4"
    systemSecret: "supersecuresupersecure"
    oidcSalt: "supersecuresupersecure"

kratos:
  replicaCount: 1

  image:
    repository: oryd/kratos
    pullPolicy: Always
    tag: "v0.11.0"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 100
    runAsNonRoot: true
    runAsUser: 100

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  service:
      type: ClusterIP
      port: 4433

  ingress:
    enabled: false
    className: ""
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    hosts: []
     #- host: "auth.hangar.test"
     #  paths:
     #    - path: "/kratos(/|$)(.*)"
     #      pathType: ImplementationSpecific

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: []

  config:
    postgresql:
      hostname: "hangarauth-postgresql"
      port: 5432
      username: "hangarauth"
      password: "hangarauth"
      database: "hangarauth"
      options: "?sslmode=disable&max_conns=20&max_idle_conns=4"
    publicHost: "https://auth.hangar.test"
    domain: "hangar.test"
    smtp:
      hostname: "mailslurper"
      port: 1025
      username: "hangarauth"
      password: "hangarauth"
      options: "?skip_ssl_verify=true&legacy_ssl=true"
      from: "no-reply@hangar.test"
    cookieSecret: "supersecuresupersecure"

kratosCourier:
  image:
    repository: oryd/kratos
    pullPolicy: Always
    tag: "v0.11.0"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 100
    runAsNonRoot: true
    runAsUser: 100

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  service:
    type: ClusterIP
    port: 4433

  ingress:
    enabled: false

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: []
