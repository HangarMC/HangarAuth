version: '3.7'

services:
  frontend:
    image: "ghcr.io/papermc/hangarauth_frontend"
    build:
      context: ../..
      dockerfile: docker/deployment/frontend/Dockerfile
    environment:
      # keep these in sync with deploy.yml action!
      host: "0.0.0.0"
      publicHost: "https://hangar-auth.benndorf.dev"
      publicApi: "https://hangar-auth.benndorf.dev/api"
      SECRETS_COOKIE: "supersecuresupersecure"
      cookieHttps: "true"
      kratosPublic: "https://hangar-auth.benndorf.dev/kratos"
      kratos: "http://kratos:4433"
      hydraAdmin: "http://hydra:4445"
      hydraPublic: "https://hangar-auth.benndorf.dev/hydra"
      hangarHost: "https://hangar.benndorf.dev"
      DEBUG: "nuxt:*"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.hangar-auth.loadbalancer.server.port=3001"
      - "traefik.http.routers.hangar-auth.rule=Host(`hangar-auth.benndorf.dev`)"
      - "traefik.http.routers.hangar-auth.entrypoints=web-secure"
      - "traefik.http.routers.hangar-auth.tls=true"
      - "traefik.http.routers.hangar-auth.tls.options=default"
      - "traefik.http.routers.hangar-auth.tls.certresolver=default"
      - "traefik.http.routers.hangar-auth.tls.domains[0].main=benndorf.dev"
      - "traefik.http.routers.hangar-auth.tls.domains[0].sans=*.benndorf.dev"
    networks:
      - web
  api:
    image: "ghcr.io/papermc/hangarauth_api"
    build:
      context: ../..
      dockerfile: docker/deployment/api/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://hangar_new_db:26257/kratos?currentSchema=auth"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PW}"
      API_KEY: "changeme"
      AUTH_KRATOS_ADMIN_URL: "http://hangar_auth_kratos:4434"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.hangar-auth-api.loadbalancer.server.port=8080"
      - "traefik.http.routers.hangar-auth-api.rule=Host(`hangar-auth.benndorf.dev`) && (PathPrefix(`/api`) || PathPrefix(`/avatar`))"
      - "traefik.http.routers.hangar-auth-api.middlewares=stripapi@docker"
      - "traefik.http.middlewares.stripapi.stripprefix.prefixes=/api"
      - "traefik.http.routers.hangar-auth-api.entrypoints=web-secure"
      - "traefik.http.routers.hangar-auth-api.tls=true"
      - "traefik.http.routers.hangar-auth-api.tls.options=default"
      - "traefik.http.routers.hangar-auth-api.tls.certresolver=default"
      - "traefik.http.routers.hangar-auth-api.tls.domains[0].main=benndorf.dev"
      - "traefik.http.routers.hangar-auth-api.tls.domains[0].sans=*.benndorf.dev"
    networks:
      - web
    volumes:
      - auth_data:/auth/data
  kratos-migrate:
    image: "ghcr.io/papermc/hangarauth_kratos-migrate"
    build:
      context: kratos
      args:
        API_HOST: "http://api:8081"
        BACKEND_HOST: "http://hangar_new_backend:8080"
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    environment:
      DSN: "cockroach://${POSTGRES_USER}@hangar_new_db:26257/kratos?sslmode=disable&max_conns=20&max_idle_conns=4"
      SECRETS_COOKIE: "supersecuresupersecure"
    labels:
      - "traefik.enable=true"
    networks:
      - web
  kratos:
    depends_on:
      - kratos-migrate
    image: "ghcr.io/papermc/hangarauth_kratos"
    build:
      context: kratos
      args:
        API_HOST: "http://api:8081"
        BACKEND_HOST: "http://hangar_new_backend:8080"
    restart: unless-stopped
    environment:
      DSN: "cockroach://${POSTGRES_USER}@hangar_new_db:26257/kratos?sslmode=disable&max_conns=20&max_idle_conns=4"
      SECRETS_COOKIE: "supersecuresupersecure"
      LOG_LEAK_SENSITIVE_VALUES: "true"
      COURIER_SMTP_CONNECTION_URI: "${EMAIL_SETTINGS}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.hangar-kauth.loadbalancer.server.port=4433"
      - "traefik.http.routers.hangar-kauth.rule=Host(`hangar-auth.benndorf.dev`) && PathPrefix(`/kratos`)"
      - "traefik.http.routers.hangar-kauth.middlewares=stripkratos@docker"
      - "traefik.http.middlewares.stripkratos.stripprefix.prefixes=/kratos"
      - "traefik.http.routers.hangar-kauth.entrypoints=web-secure"
      - "traefik.http.routers.hangar-kauth.tls=true"
      - "traefik.http.routers.hangar-kauth.tls.options=default"
      - "traefik.http.routers.hangar-kauth.tls.certresolver=default"
      - "traefik.http.routers.hangar-kauth.tls.domains[0].main=benndorf.dev"
      - "traefik.http.routers.hangar-kauth.tls.domains[0].sans=*.benndorf.dev"
    networks:
      - web
  hydra-migrate:
    image: "ghcr.io/papermc/hangarauth_hydra-migrate"
    build:
      context: hydra
    command: -c /etc/config/hydra/kratos.yml migrate sql -e --yes
    restart: on-failure
    environment:
      DSN: "cockroach://${POSTGRES_USER}@hangar_new_db:26257/hydra?sslmode=disable&max_conns=20&max_idle_conns=4"
      SECRETS_SYSTEM: "supersecuresupersecure"
      OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT: "supersecuresupersecure"
    labels:
      - "traefik.enable=true"
    networks:
      - web
  hydra:
    depends_on:
      - hydra-migrate
    image: "ghcr.io/papermc/hangarauth_hydra"
    build:
      context: hydra
    restart: unless-stopped
    environment:
      DSN: "cockroach://${POSTGRES_USER}@hangar_new_db:26257/hydra?sslmode=disable&max_conns=20&max_idle_conns=4"
      SECRETS_SYSTEM: "supersecuresupersecure"
      OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT: "supersecuresupersecure"
      LOG_LEAK_SENSITIVE_VALUES: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.hangar-oauth.loadbalancer.server.port=4444"
      - "traefik.http.routers.hangar-oauth.rule=Host(`hangar-auth.benndorf.dev`) && PathPrefix(`/hydra`)"
      - "traefik.http.routers.hangar-oauth.middlewares=striphydra@docker"
      - "traefik.http.middlewares.striphydra.stripprefix.prefixes=/hydra"
      - "traefik.http.routers.hangar-oauth.entrypoints=web-secure"
      - "traefik.http.routers.hangar-oauth.tls=true"
      - "traefik.http.routers.hangar-oauth.tls.options=default"
      - "traefik.http.routers.hangar-oauth.tls.certresolver=default"
      - "traefik.http.routers.hangar-oauth.tls.domains[0].main=benndorf.dev"
      - "traefik.http.routers.hangar-oauth.tls.domains[0].sans=*.benndorf.dev"
    networks:
      - web

networks:
  web:
    name: traefik-overlay
    external: true

volumes:
  auth_data:
